/*--------------------------------------------------------*\
    Container Spacing
        - Layout Padding/Margin
        - TODO: Cancel padding when it's manually defined.
\*--------------------------------------------------------*/

@mixin containerSpacing($direction: 'both', $style: 'padding') {
    $spacing: (
        'x': (3.5rem, 3rem, 2.75rem, 2rem, 1.5rem),
        'y': (5rem, 4rem, 3.5rem),
    );

    @if ($direction == 'both') {
        #{$style}: {
            top: nth(map-get($spacing, 'y'), 1);
            right: nth(map-get($spacing, 'x'), 1);
            bottom: nth(map-get($spacing, 'y'), 1);
            left: nth(map-get($spacing, 'x'), 1);
        }

        @include m(1024) {
            #{$style}: nth(map-get($spacing, 'y'), 1) nth(map-get($spacing, 'x'), 2);
        }

        @include m(768) {
            #{$style}: nth(map-get($spacing, 'y'), 2) nth(map-get($spacing, 'x'), 3);
        }

        @include m(640) {
            #{$style}: nth(map-get($spacing, 'y'), 2) nth(map-get($spacing, 'x'), 4);
        }

        @include m(480) {
            #{$style}: nth(map-get($spacing, 'y'), 3) nth(map-get($spacing, 'x'), 5);
        }
    }

    @elseif ($direction == 'x') {
        #{$style}: {
            right: nth(map-get($spacing, $direction), 1);
            left: nth(map-get($spacing, $direction), 1);
        }

        @include m(1024) {
            #{$style}: {
                right: nth(map-get($spacing, $direction), 2);
                left: nth(map-get($spacing, $direction), 2);
            }
        }
        @include m(768) {
            #{$style}: {
                right: nth(map-get($spacing, $direction), 3);
                left: nth(map-get($spacing, $direction), 3);
            }
        }
        @include m(640) {
            #{$style}: {
                right: nth(map-get($spacing, $direction), 4);
                left: nth(map-get($spacing, $direction), 4);
            }
        }
        @include m(480) {
            #{$style}: {
                right: nth(map-get($spacing, $direction), 5);
                left: nth(map-get($spacing, $direction), 5);
            }
        }
    }

    @elseif ($direction == 'y') {
        #{$style}: {
            top: nth(map-get($spacing, $direction), 1);
            bottom: nth(map-get($spacing, $direction), 1);
        }

        @include m(768) {
            #{$style}: {
                top: nth(map-get($spacing, $direction), 2);
                bottom: nth(map-get($spacing, $direction), 2);
            }
        }
        @include m(480) {
            #{$style}: {
                top: nth(map-get($spacing, $direction), 3);
                bottom: nth(map-get($spacing, $direction), 3);
            }
        }
    }
}
